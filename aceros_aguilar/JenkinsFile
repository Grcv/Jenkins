pipeline {
    agent any
    environment {
        DOCKER_USER = 'gerardocastro'
        DOCKER_REGISTRY = 'https://index.docker.io/v1/'
        DOCKER_CREDENTIALS_ID = 'dockerhub'
        TAG = "${env.BUILD_NUMBER}"
    }
    stages {

        stage("Comenzando despliegue"){
            steps{
                echo "Comenzando construccion y subida de imagenes"
            }
        }
        stage('Clonar Repositorios Secundarios') {
            steps {
                dir('backend_repo') {
                    git credentialsId: 'github_credentials', url: 'https://github.com/Grcv/aceros_backend.git', branch: 'main'
                }
                dir('frontend_repo') {
                    git credentialsId: 'github_credentials',url: 'https://github.com/Grcv/aceros_ui.git', branch: 'main'
                }
            }
        }
        stage('Move files') {
            steps {
                sh '''
                    mkdir -p app/frontend
                    mkdir -p app/backend
                    cp aceros_aguilar/docker-compose.yml app/
                    cp -r frontend_repo/aceros/* app/frontend/
                    cp -r backend_repo/backend/* app/backend/
                '''
            }
        }

        stage('Construir imágenes Docker') {
            steps {
                dir('app') {
                    sh 'docker compose build'
                }
            }
        }

        stage('Login y Push a Docker Hub') {
            steps {
                dir('app') {
                    script {
                        docker.withRegistry(DOCKER_REGISTRY, DOCKER_CREDENTIALS_ID) {
                            sh """
                                docker tag frontend ${DOCKER_USER}/aceros_frontend:${TAG}
                                docker tag backend ${DOCKER_USER}/aceros_backend:${TAG}
                                docker push ${DOCKER_USER}/aceros_frontend:${TAG}
                                docker push ${DOCKER_USER}/aceros_backend:${TAG}
                            """
                        }
                    }
                }
            }
        }

    }
    post {
        success {
            echo '✅ Construcción y subida a Docker Hub exitosa.'
            deleteDir()
        }
        failure {
            echo '❌ Falló la construcción o subida a Docker Hub.'
            deleteDir()
        }
    }
}
